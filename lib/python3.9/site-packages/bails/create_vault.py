#!/usr/bin/env python

import dbus
import subprocess
import hashlib
import secrets
from pathlib import Path



file_path = "$HOME/Persistent/.bitcoin/wallets/salt"

file = Path(file_path)

if file.is_file():
    with open(file_path, 'rb') as binary_file:
        salt = binary_file.read()
else:
    with open (file_path, 'wb') as binary_file:
        salt = secrets.token_bytes(32)
        binary_file.write(salt)

file_name = hashlib.scrypt("password", salt="salt", n=2 ** 20, r=8, p=1, dklen=4).hex()
subprocess.run(["fallocate", "-l", "64MiB", "$HOME/Persistent/)

# Connect to the D-Bus service
bus = dbus.SystemBus()

# Specify the service and object path
service_name = "org.freedesktop.UDisks2"
object_path = "/org/freedesktop/UDisks2/block_devices/loop2"

# Create a proxy object for the D-Bus service
obj_proxy = bus.get_object(service_name, object_path)

# Get the interface for formatting
iface = dbus.Interface(obj_proxy, "org.freedesktop.UDisks2.Block")

# Define the format type and options as a dictionary
format_type = "luks"  # Replace with your desired format type
format_options = {"encrypt.passphrase": dbus.String("<your_passphrase>"),
                  "encrypt.type": dbus.String("luks1")}

# Call the Format method with the type and options
iface.Format(format_type, format_options)
