#!/bin/python3

import sys
import codex32
import bails
import hashlib
master_seed = hashlib.scrypt(password=bytes(sys.argv[1],"utf"), salt=bytes(sys.argv[2],"utf"), n=1048576, r=8, p=1, maxmem=1025*1024*1024, dklen=16)
if len(sys.argv[:]) > 5:
    identifier = sys.argv[5]
else:
    h = hashlib.new('sha256')
    h.update(master_seed)
    hd_seed_id = h.digest()
    for char in codex32.convertbits(list(hd_seed_id), 8, 5)[:4]:
        identifier += codex32.CHARSET[char]
print(identifier)

ms32_master_seed = codex32.encode("ms", k, identifier, "s", list(master_seed))
print(ms32_master_seed)

for share in bails.generate_shares(n,ms32_master_seed):
    print(share)
