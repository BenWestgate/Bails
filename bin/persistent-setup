#!/bin/bash

# Copyright (c) 2023 Ben Westgate
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

###############################################################################
# Bails Persistent Storage Setup Tutorial
###############################################################################

# For security reviewing this use: https://explainshell.com/ for commands that are unclear.
DOTFILES='/live/persistence/TailsData_unlocked/dotfiles'
INSTALL_DIR="$DOTFILES/.local/share/bitcoin-core"

# Display welcome message
[ -d $INSTALL_DIR ] || zenity --title='Welcome to Bails' --info \
    --text="Thank you for choosing Bails, a self-custodial Bitcoin Core wallet and full node.\n\nDuring this initial setup process, we will guide you through the necessary steps\nto ensure a smooth experience. Let's get started!" \
    --no-wrap --ok-label='Continue' $ICON --icon-name=bails128
printf '\033]2;Setup the Persistent Storage\a'

# check for already unlocked Persistent Storage
if [ -b '/dev/mapper/TailsData_unlocked' ]; then
    # Check for existing Persistent Storage passphrase if setup never completed
    [ -d $INSTALL_DIR ] || while true; do
        existing_passphrase="$(python3 -c 'from bails import set_pass
box = set_pass.SimplePassphraseDialog(None,"Enter your existing Persistent Storage passphrase")
if box.passphrase:
    print(box.passphrase)
else:
    print("")' 2>/dev/null)"
        if [ -z "$existing_passphrase" ]; then
            zenity --error --title="Error" --text="Existing Persistent Storage passphrase is required. Please provide the passphrase." $ICON
        else
            # Estimate passphrase entropy to see if we can proceed
            entropy=$(keepassxc-cli estimate "${existing_passphrase// /}" | cut -f2 | tr -C -d '[:digit:]')
            if ((entropy >= 65000)); then
                break
            elif ((entropy > 50000)); then
                zenity --question --icon-name=dialog-warning --title='Warning: Weak Passphrase Detected' \
                  --text="Your passphrase is too weak to protect against a state-sponsored attacker with physical access to your USB stick.\n\nTails recommends choosing a long passphrase made of 5 to 7 random words.\n<a href='https://theintercept.com/2015/03/26/passphrases-can-memorize-attackers-cant-guess/'>Learn about the maths behind memorizable and secure passphrases</a>.\n\nIf a state-sponsored attacker with physical access to your device is part of your <a href='https://ssd.eff.org/module/your-security-plan'>threat model</a>, you MUST restart, delete this Persistent Storage and use a recommended passphrase.\n\nFor more information, please read the Tails security advisory on passphrase security: <a href='https://tails.net/security/argon2id/#understanding'>Understaing weak passphrases</a>\n\nBe sure to save your work before clicking 'Restart Now'." \
                  --width=600 $ICON --ok-label='Continue' --default-cancel --cancel-label='Restart Now' && break || exit 1
            else
                zenity --warning --title='WARNING: Weak Passphrase Detected' \
                  --text="Your passphrase is too weak to protect against attackers with physical access to your USB stick.\n\nTails recommends choosing a long passphrase made of 5 to 7 random words.\n<a href='https://theintercept.com/2015/03/26/passphrases-can-memorize-attackers-cant-guess/'>Learn about the maths behind memorizable and secure passphrases</a>.\n\nYou MUST restart, delete this Persistent Storage and use a recommended passphrase.\n\nFor more information, please read the Tails security advisory on passphrase security: <a href='https://tails.net/security/argon2id/#understanding'>Understaing weak passphrases</a>\n\nBe sure to save your work before clicking 'Restart Now'." \
                  --width=600 $ICON --ok-label='Restart Now'
                exit 1
            fi
        fi
            zenity --error --title="Error" --text="Existing Persistent Storage passphrase is required. Please provide the passphrase to continue." $ICON
    done
    unset entropy
     # Change user account password to Persistent Storage passphrase for spaced repetition practice.
    printf '%s\n%s' "$existing_passphrase" "$existing_passphrase" | passwd || echo "FAILURE to change passphrase"
else
    # Choose passphrase
    zenity --warning --title='Choose a strong passphrase' \
        --text='It is important to select a strong passphrase to protect your Bitcoin data.\n\nWe recommend using a suggested passphrase from the Persistent Storage dialog.' \
        --ok-label='I Will Use a Suggested Passphrase' --icon-name=tails-persistent-storage --no-wrap $ICON
    zenity --warning --title='Write your passphrase down' \
        --text='It is impossible to recover your passphrase if you forget it!\n\nTo help you remember your passphrase, you can write it on a piece of paper, store it in a sealed envelope in your wallet for a few days, and destroy it once you know it well. Write on a hard surface to avoid leaving an imprint of the secret.' \
        --ok-label='I Will Write My Passphrase Down' --icon-name=org.gnome.gedit --width=530 $ICON

    # Persistent storage creation
    until [ -b '/dev/mapper/TailsData_unlocked' ]; do
            sleep 10
            notify-send --icon=bails128 'Important: Use a suggested passphrase. To help remember:' 'Create a mental image or mnemonic using the words, in order.\n\nIt might be a story, scenario, or sentence that you will be able to remember and that can remind you of the particular words you chose, in order.'
    done & notifying+=($!)

    until [ -b '/dev/mapper/TailsData_unlocked' ]; do
        grep --count 'python3 /usr/local/lib/tps-frontend' <<< "$(ps -ef)" - >/dev/null ||
            { tails-persistent-storage & notify-send --icon=tails-persistent-storage 'Click Continue to create a Persistent Storage'; }
        sleep 1
    done

    # Clear notifications
    kill "${notifying[@]}" &>/dev/null
    dbus-send --session --type=method_call --dest=org.gnome.Shell /org/gnome/Shell org.gnome.Shell.Eval string:'Main.panel.statusArea.dateMenu._messageList._sectionList.get_children().forEach(s => s.clear());'

    # Memorization help
    until {
        zenity --info --title='Spaced repetition trainer' \
            --text='Enter the <b>exact</b> same passphrase from Persistent Storage so Bails can help you memorize it.' \
            --ok-label='I Will Enter the Exact Same Passphrase' --ellipsize $ICON
        python3 -c 'from bails import set_pass
box = set_pass.SimplePassphraseDialog(None,"Enter the passphrase of your Persistent Storage")
if box.passphrase:
    print(box.passphrase+"\n"+box.passphrase)
else:
    print("\n")' 2>/dev/null | passwd
    }; do
        zenity --warning --text='No passphrase was entered.' --title="Spaced repetition trainer" \
            --ok-label='Try Again' --ellipsize
    done

fi
[ -d $INSTALL_DIR ] || {
    # Spaced repetition training loop
    spaced-repetition &

    # Display memorization tips
    zenity --info --title='Tips for your new passphrase' \
        --text="You will be prompted periodically to enter your passphrase as spaced repetition training. Practice entering your passphrase <i>daily at first and then at least once a week</i>  to commit it to memory.\n\nIt is essential to keep your passphrase safe. Do not re-use it for any other accounts. If you wrote it down, store it out of sight, in a secured location, away from your Bails USB sticks and destroy it once you memorize it." \
        --ok-label='I Will Destroy It Once Memorized' --width=640 $ICON
}
# Checking features of the Persistent Storage
if /usr/local/lib/tpscli is-active PersistentDirectory && \
    /usr/local/lib/tpscli is-active GnuPG && \
    /usr/local/lib/tpscli is-active Dotfiles; then
        :
else
    grep --count 'python3 /usr/local/lib/tps-frontend' <<< "$(ps -ef)" - >/dev/null ||
        { tails-persistent-storage & notify-send --icon=tails-persistent-storage 'You must turn on needed features of the Persistent Storage.'; }

    zenity --info --title='Features of the Persistent Storage' \
        --text='In the Persistent Storage application below, scroll\nand click the toggle to turn on necessary features.' \
        --icon-name=tails-persistent-storage $ICON --no-wrap &
    sleep 4
fi
until /usr/local/lib/tpscli is-active PersistentDirectory && \
    /usr/local/lib/tpscli is-active GnuPG && \
    /usr/local/lib/tpscli is-active Dotfiles; do
    grep --count 'python3 /usr/local/lib/tps-frontend' <<< "$(ps -ef)" - >/dev/null ||
        { tails-persistent-storage & notify-send --icon=tails-persistent-storage 'You must turn on needed features of the Persistent Storage.'; }
    {
        /usr/local/lib/tpscli is-active PersistentDirectory ||
            { zenity --notification --text='Persistent Folder must be toggled on.' --window-icon=folder --timeout=6; false; }
    } &&
        {
            /usr/local/lib/tpscli is-active NetworkConnections ||
                { ((i++ < 5)) && zenity --notification --text='Toggle on "Network Connections" to remember your Wi-Fi' --window-icon=network-wired --timeout=6; true; }
        } &&
        {
            /usr/local/lib/tpscli is-active GnuPG ||
                { zenity --notification --text='"GnuPG" must be toggled on.' --window-icon=gcr-key --timeout=6; false; }
        } &&
        {
            /usr/local/lib/tpscli is-active Dotfiles ||
                { zenity --notification --text='"Dotfiles" must be toggled on.' --window-icon=gnome-settings --timeout=6; false; }
        }
done

# Closes the Persistent Storage window
pkill python3 &>/dev/null
pkill zenity &>/dev/null

# Clear notifications
dbus-send --session --type=method_call --dest=org.gnome.Shell /org/gnome/Shell org.gnome.Shell.Eval string:'Main.panel.statusArea.dateMenu._messageList._sectionList.get_children().forEach(s => s.clear());'
# Cleanup and exit
exit 0
