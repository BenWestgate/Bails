#!/bin/bash
# Copyright (c) 2022 Ben Westgate
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
#################################################

# Implements the Application menu to access various features.
# Not all have been implemented as of 0.1.0-alpha

#################################################

export LOCAL_DIR=/live/persistence/TailsData_unlocked/dotfiles/.local/
export BAILS_DIR=$LOCAL_DIR
device=$(lsblk --inverse --path --raw --output=NAME /dev/mapper/TailsData_unlocked | sed -n 3p)
USB=$(lsblk --inverse --path --raw --output=NAME /dev/mapper/TailsData_unlocked | tail -1)
response=$(zenity --question --window-icon=$LOCAL_DIR/share/icons/bails128.png --icon-name=media-removable --title='Bails menu' --text='Clone - Create a blank Bails node for a friend.\n\nBackup - Duplicate your Bails node.' --extra-button='Clone' --extra-button='Backup' --extra-button='Settings' --extra-button='Help' --switch --width=350)
[ "$response" == '' ] && exit
[ "$response" == 'Clone' ] && zenity --info --text='Coming soon'
[ "$response" == 'Backup' ] && /usr/bin/gnome-terminal --title 'Log of Persistent Storage Backup' --hide-menubar -- $LOCAL_DIR/bin/tails-backup
[ "$response" == 'Help' ] && help=$(zenity --window-icon=$LOCAL/share/icons/bails128.png --question --icon-name=help-faq-symbolic --title='Help Menu' --text='' --extra-button='Online Help' --extra-button='Donate' --extra-button='Report a Bug' --extra-button='About' --switch)
[ "$help" == 'Donate' ] && exit # xdg-open bitcoin:BC1Q9KYUJH8NRRJ2VWW3MA8TERWCRM9WUA24MH7TU3?label=Donation%20to%20Bitcoin%20Core%20on%20Tails #FIXME change address
[ "$help" == 'Report a Bug' ] && tor-browser https://github.com/BenWestgate/Bails/issues
[ "$help" == 'About' ] && zenity --info --window-icon=$LOCAL_DIR/share/icons/bails128.png --title='About Bails' --icon-name=bails128 --text='Bails version v0.2.0\n\nCopyright (C) 2023 Ben Westgate\n\nPlease contribute if you find Bails useful. Visit <a href="https://twitter.com/BenWestgate_">https://twitter.com/BenWestgate_</a> for further information about the software.\nThe source code is available from <a href="https://github.com/BenWestgate/Bails">https://github.com/BenWestgate/Bails</a>.\n\nThis is experimental software.\nDistributed under the MIT software license, see the accompanying file COPYING or <a href="https://opensource.org/licenses/MIT">https://opensource.org/licenses/MIT</a>' --width=650
[ "$help" == 'Online Help' ] && xdg-open https://bitcoin-core-on-tails.slack.com/ && xdg-open 
[ "$response" == 'Settings' ] && setting=$(zenity --window-icon=$LOCAL_DIR/share/icons/bails128.png --question --icon-name=org.gnome.Settings --title=Settings --text='Coming soon\n\nConfigure Bitcoin Core on Tails' --extra-button='Update Bitcoin Core' --extra-button='Passphrase' --extra-button='Sync Faster' --switch --width=300)
[ "$setting" == 'Update Bitcoin Core' ] && /usr/bin/gnome-terminal --title 'Updating Bitcoin Core' --hide-menubar -- $LOCAL_DIR/bin/bails 2 2 2 --refresh-keys
[ "$setting" == 'Passphrase' ] && pass_mgmt=$(zenity --window-icon=$LOCAL_DIR/share/icons/bails128.png --question --icon-name=dialog-password --title='Passphrase settings' --text='Coming soon\n\n<b>WARNING:</b> <span foreground="red">The most secure way to change or remove a compromised or weak passphrase is to erase the device AND use physical destruction. This includes all backups. The old password may still be around, potentially for a very long time and can be used to access your bitcoin data with forensic tools.</span>\n\nBefore erasing and destroying, you should create a new backup set using a new stronger password, such as one from KeePassXC.\n\nIf you fear fallback commands have been stolen, but not enough to learn your passphrase, you can make a new set and destroy the old.' --extra-button='New Fallback' --extra-button='Change Passphrase' --switch --width=500)
[ "$pass_mgmt" == 'New Fallback' ] && zenity --info "coming soon"	#TODO add this
[ "$pass_mgmt" == 'Change Passphrase' ] && { tps-frontend-wrapper & zenity --notification --text='You must click Change Passphrase... to change passphrase'; }
[ "$setting" == 'Sync Faster' ] && zenity --window-icon=$LOCAL_DIR/share/icons/bails128.png --title='Sync Faster' --list --text='Coming soon - placeholder.' --column='' --column='Method' --checklist FALSE 'Aggressive pruning (Use more RAM on small storage)' FALSE 'RAM Sync (Fastest but unsafe shutdown loses progress)' --width=433 --height=210

# TODO verify that this actually does something, and self-edit this file to have the box "checked" TRUE if it succeeds.
[ "$sync" == 'RAM Sync (Fastest but unsafe shutdown loses progress)' ] && {
    rsync -a --verbose --progress $HOME/Persistent/.bitcoin/chainstate /tmp/.bitcoin
    bitcoin-qt --nodebuglog --datadir=/tmp/.bitcoin --blocksdir=$HOME/Persistent/.bitcoin/blocks --walletdir=$HOME/Persistent/.bitcoin/wallets
    # utilization of the tmpfs
    # df --output=pcent /tmp | tail -1
    # utilization of the memory overall
    # echo $((100*$(grep Available /proc/meminfo | sed s/[^0-9]//g) / $(grep MemTotal /proc/meminfo | sed s/[^0-9]//g) ))
    # have a terminal window titled RAMSync that displays ram and tmpfs used, and that when closed. Closes bitcoin core and copies the RAMdisk contents back to persistent storage.
    rsync -a --del --verbose --progress /tmp/.bitcoin $HOME/Persistent/.bitcoin/chainstate
}
gtk-launch bails.desktop
